
nets(넷스케이프)
javascript

exp(마이크로 소프트 익스플로러)
vbscript (javascript와 동일한 기능을 하기 위한 경쟁)

vbscript는 전반까지는 언어적 측면에선 우위.
기존에 자기들의 언어가 있으므로 새롭게 언어를 만들 필요가 없었음.

과거엔 어떤 브라우저냐 따라서 개발자는 javascript로 할 지 vbscript로 할 지 두 개 다 해야했음.
vbscript는 자바스크립트를 모방했지만, 베이직에 기초. 베이직이라는 언어를 모르면 쓰기가 어려웠음.(이질감)

자바스크립트는 따로 배우지 않아도 자바의 언어를 가져왔기 때문에 이질감이 없음.

vbscript는 느낌이 pl랭귀지와 비슷함.

마이크로소프트가 브라우저를 석권했으나 어차피 javascript를 지원해야했기 때문에 (+ javascript는 오픈소스)
기본으로 javascript를 지원함. vbscript는 vba로(비주얼베이직포어어플리케이션) 필요한 데에서만 사용(이제 웹x)

javascript는 함수형언어임.

자바스크립트의 한계는 브라우저밖에 사용x, 그당시 언어의 한계가 있었음.
vba로 만든 액티브x는 원하는 언어로 만들 수 있었고 편리성이 높았으나,
로컬로 프로그램을 돌리므로 태생적으로 보안에 취약.

익스플로러 암흑기에서는(8,9)
개발자 입장에서는 하나의 퍼포먼스를 주기 위해서 익스플로러는 각 명령마다 사용해야할 문법이 달랐기 때문에
다루기 어려웠음.

그 후 2000년도 초중반 새로운 브라우저 회사 크롬(구글이 만듬)이 등장함과 동시에 절반을 석권함.
기존 넷스케이프의 문제가 아니라 왜 느려졌는지에 대한 문제를 고민함.
기본적인 넷스케이프의 틀만 가져옴. 굳이 액티브x를 사용했어야하는지에 대해 다룸.(액티브x사용 X위해)
그래서 자바스크립트를 새로 만들어 우리 사용하고 있는 자바스크립트인 구글 크롬의 v8엔진(브이에잇엔진)을 만듬.

자바스크립트는 원래 인터프리터언어였음.(해석하고 실행하는)
v8로 되면서 동작방식이 인터프리터처럼 보여지는 컴파일언어로 바뀜.
우리가 브라우저엔진을 깔게되면 알아서 깔림.

문서의 틀은 html 표현은 css, 문서의 수행,일,기능적인 측면은 자바스크립트(v8엔진)을 사용하도록 표준화함. 

태생적인 한계 : 과거의 문법을 사용할 수 있고 성능적인 퍼포먼스가 뛰어나나, 싱글스레드.
그래서 채택하는 방식은 이벤트드라이빙 방식임.(RxJava : 리액티브 프로그래밍)
메인스레드 하나라는 것이지 실제로는 기본적으로 3개가 돌아감. 
그러나 정석적으로 관리자가 프로그래밍적으로 사용할 수 있는 스레드는 단일,싱글스레드임.

하나는 v8이 동작하기 위한 스레드,
다른 하나는 실제로 프로그래머가 프로그램코드를 작성하는 스레드가 있음.(마지막으로 작성한 코드의 일을 수행하는 스레드) 
프로그래머가 만든 코드를 일자로 수행하는데 실행에서 진행하다가 일을 요청할때(펑셔널 호출)
끝날때까지 기다렸다가 실행하는 게 아닌 다른 스레드로 넘김! 그렇게 쭉 일자로 수행.(비동기방식:이벤트방식:레이티브방식)
이렇게 자바스크립트는 투 트랙으로 실행함.

우리가 타이핑하면서도 연관검색어 등 뜨는 이유가 생김. 
 
주의해야할 점 : 이처럼 같은것과 다른 것을 구분해야함.(동작하는 패러다임 자체가 다름.)
자바는 println할때 그것이 수행해야지만 하지만. 자바스크립트는 방금 설명한 것처럼 펑서녈 방식 즉 비동기 방식이므로
이를 구분할 줄 알아야 함.

자바스크립트는 어디서 어디까지가 자바스크립트인지 설명이 매우 애매모호함. 해년마다 자바스크립트가 바뀌기 때문.
(검색사이트에 쳐서 공부하면 이커마스크립트(Es6) 등 문법이 매우 광범위해서 공부 불가능)
그래서 자바스크립트는 기본버전에서부터 순서적이고 단계적으로 공부해야 접근이 쉽고 간단해짐. 
불편함과 필요성을 못느끼고 다음 단계의 언어로 공부하면 안됨.

루비, 파이썬 등이 함수형 언어이므로 자바스크립트를 공부하면 쉽게 접근 가능.
펑서녈언어의 특성과 원리를 꼭 이해하기!

