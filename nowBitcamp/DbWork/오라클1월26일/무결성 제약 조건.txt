10장. 무결성 제약 조건
잘못된 데이터가 입력되지 않도록 무결성 제약 조건을 지정한다

1. NOT NULL 제약조건을 지정한다
2. UNIQUE 제약 조건을 설정한다
3. PRIMARY KEY 제약 조건을 설정한다.
4. FOREIGN KEY 제약 조건을 설정한다.

--------------------------------------------------------------------------------------
무결성 제약 조건의 개념과 종류

NOT NULL : NULL 제외

create table ex01(
  2  num1 number,
  3  num2 number(1),
  4  num3 number not null
  5  );

insert into ex01 values(1,1,1);
insert into ex01 values(null,1,1);
insert into ex01 values(11,null,1);
insert into ex01 values(1,1,null); //오류

insert into ex01 (num3) values(1); //다른 곳은 null로 들어감 num3가 notnull제약이라 num3만 이렇게 가능
--------------------------------------------------------------------------------------
UNIQUE : 중복값을 허용하지 않음, 단 NULL은 정보가 없다는 것이니 허용함

create table ex02(
	num1 number,
	num2 number unique
);

insert into ex02 values(1,1);
insert into ex02 values(2,2);
insert into ex02 values(3,3);
insert into ex02 values(1,3); //오류
insert into ex02 values(2,null);
insert into ex02 values(3,null);
--------------------------------------------------------------------------------------
PRIMARY KEY: NULL을 허용하지 않고 중복된 값을 허용하지 않음+인덱스가 자동부여, 한테이블의 식별자라고 함
★인덱스란? 미리 인덱싱해놓은 것. 정보는 저장하면 쌓이는 게 아닌 흩어져 있으니 목차같은걸로 생각하면됨
단, PRIMARY KEY를 막 쓰면 오히려 인덱스 양이 많아지니 안좋음 -> 데이타베이스 관리자가 사용하는 것

그래서 NOT NULL과 UNIQUE를 쓰고 싶으면  unique not null 쓰면 됨

desc ex03하면 primary key는 not null로 보여짐
	

create table ex03(
	num1 number primary key,
	num2 number not null,
	num3 number unique,
	num4 number unique not null
);

INSERT INTO EX03 VALUES(1,1,1,1);
INSERT INTO EX03 VALUES(2,2,2,null); //오류
INSERT INTO EX03 VALUES(null,1,1,1); //오류
INSERT INTO EX03 VALUES(1,2,2,2); //오류
INSERT INTO EX03 VALUES(3,2,2,2); 

--------------------------------------------------------------------------------------
CHECK : 값의 범위를 설정

create table ex04(
	num number primary key,
	gender char(3) check (gender in ('남','여'))
);

insert into ex04 values(1,'남');
insert into ex04 values(1,'나'); //오류
insert into ex04 values(1,''); //null 허용

create table ex05(
	num number primary key,
	kor number(3) check (kor between 0 and 100)
);

insert into ex05 values(1,0);
insert into ex05 values(2,50);
insert into ex05 values(3,100);
insert into ex05 values(4,101);

--------------------------------------------------------------------------------------
FOREIGN KEY : 참조되는 테이블의 칼럼의 값이 존재하면 허용하도록 설정, references를 쓴다



create table ex06(
	idx number primary key,
	name varchar2(2)
);

insert into ex06 values(10,'aa');
insert into ex06 values(50,'bb');

create table ex07(
	num number primary key,
	sub varchar2(4),
	idx2 number references ex06(idx)
);

insert into ex07 values(1,'aaaa',10);
insert into ex07 values(2,'aaaa',50);
insert into ex07 values(3,'aaaa',20); //오류 
insert into ex06 values(20,'cc');
insert into ex07 values(3,'aaaa',20); //정상
insert into ex07 values(4,'aaaa',20);
insert into ex07 values(4,'aaaa'null);

drop table ex06; //오류 : ex07데이터에 참조하고 있는 데이터가 있음.
참조하는 데이터를 없애거나 참조하는 데이터를 가진 ex07 테이블을 지우거나, 제약조건의 이름 바꾸거나 해야함

drop table ex07;
drop table ex06;

--------------------------------------------------------------------------------------
constraint : 제약조건의 이름 설정, 약속되어 있는 이름 패턴이 있음
ex08_num1_pk ex08에 있는 num1의 primary key다 라는걸 바로 유추할 수 있도록

create table ex08(
	num1 number constraint ex08_num1_pk primary key,
	num2 number constraint ex08_num2_nn not null,
	num3 number constraint ex08_num3_uk unique,              //k가 없어도 key라는 의미로 k임
	num4 number constraint ex08_num4_ck check(num4 in(0,1)),
	num5 number constraint ex08_num5_fk references ex05(num)
);

NOT NULL 삭제하기
alter table ex08 drop constraint ex08_num2_nn;
insert into ex08 values(2,null,2,0,2); 


UNIQUE 변경
alter table ex08 drop constraint ex08_num3_uk;
insert into ex08 values(3,null,1,0,3);

alter table ex08 add constraint ex08_num3_uk unique(num3); //기존 데이타에 중복값 있음 
delete from ex08 where num1=3;
alter table ex08 add constraint ex08_num3_uk unique(num3);
insert into ex08 values(3,null,1,0,3); //제약 조건 확인

--------------------------------------------------------------------------------------
disable : 제약 조건을 잠시 비활성화 하는 방법, enable : 활성

alter table ex08 disable constraint ex08_num5_fk;
insert into ex08 values(7,7,7,0,7);

alter table ex08 enable constraint ex08_num5_fk; //오류 
delete from ex08 where num5=7;
alter table ex08 enable constraint ex08_num5_fk;
insert into ex08 values(7,7,7,0,7); //제약 조건 확인

create table ex09(
	num1 number,
	num2 number,
	num3 number,
	constraint ex09_num1_pk primary key(num1),
	unique(num2),
	constraint ex09_num3_fk foreign key(num3) references ex05(num)
);

★하나의 컬럼에 여러 제약 조건마다 constraint로 이름 설정 가능!
★NOT NULL은 따로 빼서 설정하지 못함

alter table ex09 modify (num2 number constraint ex09_num2_nn not null);

create table ex10(
	num1 number primary key,
	num2 number constraint ex10_num2_nn not null,
	constraint ex10_num2_uk unique(num2) 
);


--------------------------------------------------------------------------------------














