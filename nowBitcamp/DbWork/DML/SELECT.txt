selct * from DEPT;

DEPT 테이블에 있는 모든 내용 출력

select * from emp;
emp 테이블에 있는 모든 내용 출력


select만 치고 그냥 엔터치면 세미콜론이 나올때까지 그냥 줄만 바뀜
selelct
*
from
emp;

이렇게

단, 공백을 두 번 치면 명령문이 취소됨

-- 치고 쓰면  주석임

★쿼리문은 대소문자를 구분하지 않음

select ename, sal, hiredate from emp;
emp의 원하는 순서대로 출력 가능

쿼리문은 영어문장과 유사함.

select dname as "부서명", loc as "지역" from dept;
select dname "부서명", loc "지역" from dept;  (as 생략 가능)

컬럼들 네임 바꾸고 조회하기 : dnma을 부서명으로 바꾸고 loc를 지역으로 바꾼 후 조회

별칭에 공백문자나 &#^@^%등 특수문자 사용하고 싶으면 이렇게 as"#$#Dname "바꾸면 됨

띄어쓰기는 하나의 단어의 구분이므로 조심


칼럼의 row에 있는 내용의 중복을 없애고 싶을 때
select distinct job from emp;

묶음으로 보고 싶을 때
select distinct job, ename from emp;
job과 이름이 둘 다 중복된 것들을 하나로 묶는 것

사원들이 어떤 부서에 소속되어 있는지 소속 부서번호 출력하되 중복되지 않고 한 번 씩 출려하는 쿼리문 작성
select distinct deptno, ename from emp;

조건문은 테이블 다음 위치에 작성함

select empno, ename,sal from emp where sal>=3000;

연산자는 자바와 다르게 그냥 = 씀

<>
!=  모두 다르다
^=

부서번호 10인 사람 모두 출력
select * from emp where deptno=10;

급여 2000 미만인 사람 사번과 이름 급여 출력
select empno, ename, sal from emp where sal<2000;

스미스 사원 정보를 출력
select * from emp where ename='SMITH';  >>>> '   ' 안에 해야함 그리고 밸류값 자체는 대소문자 구분해야함
" "이 아님 쿼리에서  "   "은 문자열이 아닌 마카역할 '   '이 문자열 


select 1234 from dept;

밀러인 사람의 사원번호 이름 직급 출력
select empno, ename, job from emp where ename='MILLER';

1985년 이후 출생 자만 출력
select ename, hiredate from emp where hiredate>='1985/01/01';
select ename, hiredate from emp where hiredate>='85/01/01'; 1950년도 이후부터 조회됨
select ename, hiredate from emp where hiredate>='1985-01-01';

다중 조건문이면 연산자 and, or 쓰면 됨

급여가 1000~3000 아래인 사원
select * from emp where sal<=3000 and sal>=1000;
select ename, sal from emp where sal<=3000 and sal>=1000;
select ename, sal from emp where sal between 1000 and 3000;

사원번호가 7844이거나 7654이거나 7521인 사원
select empno, ename from emp where empno=7844 or empno=7654 or empno=7521;
select empno, ename from emp where empno in(7844,7654,7521);
in은 결과물에서 안의 내용(집합)인 것을 출력!

부서번호가 10번이 아닌 사원
select deptno, ename from emp where not deptno=10;
select deptno, ename from emp where deptno!=10;
select deptno, ename from emp where deptno<>10;
select deptno, ename from emp where deptno^=10;


like연산자
칼럼이름 like 패턴 
% : 문자가 없거나 하나 이상의 문자가 어떤 값이 와도 상관없다.
_ : 하나의 문자가 어떤 값이 와도 상관없다

select ename from emp where ename like 'S%'; S로 시작하는 사람
select ename from emp where ename like '%S'; 끝나는 사람 
select ename from emp where ename like '%S%'; 이름에 S가 들어가는 사람
select ename from emp where ename like '_A%'; 이름 두번째에 A들어가는 사람
select ename from emp where ename like '____'; 이름이 4글자인 사람

이름에 A를 포함하지 않는 사원
select ename from emp where not ename like '%A%';


null을 위한 연산자

select ename, comm from emp where comm is null;
select ename, comm from emp where comm is not null;

select ename, comm+1 from emp where comm is not null;
comm에 각 1씩 더함. 그러나  null은 데이터 자체가 없으므로 변함없이 null

sql은 데이터는 정렬되어 있지 않음(순서가 없음)

최신순서대로 하려면 우리가 끄집어 낼때 순서를 정해줘야함

ORDER BY
select * from dept order by deptno;
select * from dept order by dname;
select * from dept order by loc;

오름차순 생략
select * from dept order by deptno asc;

내림차순
select * from dept order by deptno desc;

시간순
select ename, hiredate from emp order by hiredate asc;

단, 문자열은 문자를 구분하는  순서는 없음

오라클 데이터타입의 순서는 크게 숫자 문자 날짜 순으로 나옴

또한! desc emp; 는 emp 테이블에 정의되어있는 구조를 보여줌(아까 내림차순 그런 정의가 아예 아님!)


★쿼리 문장에서는  순서가 있음 표현 조건-> order by(from 다음에 where다음에 order by가 마지막!)
select ename, sal from emp where sal>2000 order by sal desc;





